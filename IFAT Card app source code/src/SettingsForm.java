
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.util.Hashtable;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author YahMa
 */
public class SettingsForm extends javax.swing.JFrame {

    /**
     * Creates new form SettingsForm
     */
    String desc ;
    private Hashtable<String, Integer> controllerConfig;

    public SettingsForm() {
        initComponents();
    }
    public SettingsForm(Hashtable<String,Integer> settings) {
        initComponents();
        controllerConfig = settings;
        // set the values of the spinners
        spn_ROIX.setValue(controllerConfig.get("roiX"));
        spn_ROIY.setValue(controllerConfig.get("roiY"));
        spn_Width.setValue(controllerConfig.get("width"));
        spn_Height.setValue(controllerConfig.get("height"));
        spn_MaskLow.setValue(controllerConfig.get("lower"));
        spn_MaskUpper.setValue(controllerConfig.get("upper"));
        spn_HorThresh.setValue(controllerConfig.get("horThresh"));
        spn_VerThresh.setValue(controllerConfig.get("verThresh"));
        spn_ParThresh.setValue(controllerConfig.get("partialThresh"));
        spn_Features.setValue(controllerConfig.get("maxFeatures"));
        spn_Keep.setValue(controllerConfig.get("keepPercent"));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_Title = new javax.swing.JLabel();
        lbl_Description = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_Desc = new javax.swing.JTextArea();
        scr_Settings = new javax.swing.JScrollPane();
        pnl_Settings = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        spn_ROIX = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        spn_ROIY = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        spn_Width = new javax.swing.JSpinner();
        spn_Height = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        spn_MaskLow = new javax.swing.JSpinner();
        spn_MaskUpper = new javax.swing.JSpinner();
        spn_HorThresh = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        spn_ParThresh = new javax.swing.JSpinner();
        spn_VerThresh = new javax.swing.JSpinner();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        spn_Features = new javax.swing.JSpinner();
        spn_Keep = new javax.swing.JSpinner();
        btn_Configure = new javax.swing.JButton();
        btn_Reset = new javax.swing.JButton();
        btn_Exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lbl_Title.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lbl_Title.setText("Configure Application Settings");

        lbl_Description.setText("On this page you are able to change the settings of the image detection algorithm.");

        jLabel1.setText("Be aware that adjusting these settings may negatively affect the accuracy of the");

        jLabel2.setText("image detection algorithm.  Click on each setting to get a detailed description of");

        jLabel3.setText("the setting.");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Description");

        txt_Desc.setEditable(false);
        txt_Desc.setColumns(20);
        txt_Desc.setLineWrap(true);
        txt_Desc.setRows(5);
        txt_Desc.setText("Click on a setting to get a detailed description.");
        txt_Desc.setWrapStyleWord(true);
        txt_Desc.setAutoscrolls(false);
        txt_Desc.setName("txt_Desc"); // NOI18N
        jScrollPane2.setViewportView(txt_Desc);

        scr_Settings.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Settings List");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel6.setText("Image Detection preprocessing settings");

        jLabel7.setText("ROI rectangle X position:");

        spn_ROIX.setModel(new javax.swing.SpinnerNumberModel(35, 20, 50, 1));
        spn_ROIX.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spn_ROIXStateChanged(evt);
            }
        });
        spn_ROIX.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                spn_ROIXFocusGained(evt);
            }
        });
        spn_ROIX.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                spn_ROIXMouseClicked(evt);
            }
        });

        jLabel8.setText("ROI rectangle Y position:");

        spn_ROIY.setModel(new javax.swing.SpinnerNumberModel(110, 90, 125, 1));
        spn_ROIY.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spn_ROIYStateChanged(evt);
            }
        });

        jLabel9.setText("ROI rectangle width:");

        jLabel10.setText("ROI rectangle height:");

        spn_Width.setModel(new javax.swing.SpinnerNumberModel(250, 225, 275, 1));
        spn_Width.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spn_WidthStateChanged(evt);
            }
        });

        spn_Height.setModel(new javax.swing.SpinnerNumberModel(350, 300, 375, 1));
        spn_Height.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spn_HeightStateChanged(evt);
            }
        });

        jLabel11.setText("Mask lower bound:");

        jLabel12.setText("Mask upper bound:");

        spn_MaskLow.setModel(new javax.swing.SpinnerNumberModel(115, 100, 180, 1));
        spn_MaskLow.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spn_MaskLowStateChanged(evt);
            }
        });

        spn_MaskUpper.setModel(new javax.swing.SpinnerNumberModel(180, 180, 200, 1));
        spn_MaskUpper.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spn_MaskUpperStateChanged(evt);
            }
        });

        spn_HorThresh.setModel(new javax.swing.SpinnerNumberModel(35, 20, 41, 1));
        spn_HorThresh.setName("spn_HorThresh"); // NOI18N
        spn_HorThresh.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spn_HorThreshStateChanged(evt);
            }
        });

        jLabel14.setText("Horizontal Threshold:");

        jLabel16.setText("Partial Threshold:");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel13.setText("Image Detecttion algorithm settings");

        jLabel15.setText("Vertical Threshold:");

        spn_ParThresh.setModel(new javax.swing.SpinnerNumberModel(715, 600, 990, 1));
        spn_ParThresh.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spn_ParThreshStateChanged(evt);
            }
        });

        spn_VerThresh.setModel(new javax.swing.SpinnerNumberModel(21, 10, 24, 1));
        spn_VerThresh.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spn_VerThreshStateChanged(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel17.setText("Image Alignment settings");

        jLabel18.setText("Max Features:");

        jLabel19.setText("Keep Percent:");

        spn_Features.setModel(new javax.swing.SpinnerNumberModel(500, 450, 550, 1));
        spn_Features.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spn_FeaturesStateChanged(evt);
            }
        });

        spn_Keep.setModel(new javax.swing.SpinnerNumberModel(20, 5, 80, 1));
        spn_Keep.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spn_KeepStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnl_SettingsLayout = new javax.swing.GroupLayout(pnl_Settings);
        pnl_Settings.setLayout(pnl_SettingsLayout);
        pnl_SettingsLayout.setHorizontalGroup(
            pnl_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_SettingsLayout.createSequentialGroup()
                .addGroup(pnl_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_SettingsLayout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnl_SettingsLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(pnl_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(spn_HorThresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnl_SettingsLayout.createSequentialGroup()
                                .addGroup(pnl_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnl_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(spn_ROIY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spn_Width, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spn_Height, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spn_MaskLow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spn_MaskUpper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spn_ROIX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(spn_VerThresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spn_ParThresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spn_Features, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spn_Keep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnl_SettingsLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(pnl_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnl_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnl_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnl_SettingsLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(143, Short.MAX_VALUE))
        );
        pnl_SettingsLayout.setVerticalGroup(
            pnl_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_SettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(spn_ROIX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(spn_ROIY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spn_Width, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(spn_Height, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(spn_MaskLow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(spn_MaskUpper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(spn_HorThresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(spn_VerThresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(spn_ParThresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(spn_Features, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(spn_Keep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        scr_Settings.setViewportView(pnl_Settings);

        btn_Configure.setText("Configure");
        btn_Configure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ConfigureActionPerformed(evt);
            }
        });

        btn_Reset.setText("Reset to default");
        btn_Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ResetActionPerformed(evt);
            }
        });

        btn_Exit.setText("Exit");
        btn_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_Description, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(scr_Settings, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btn_Exit)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btn_Reset)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btn_Configure))
                                .addComponent(jScrollPane2))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(lbl_Title, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lbl_Title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_Description)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scr_Settings, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Exit)
                    .addComponent(btn_Reset)
                    .addComponent(btn_Configure))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_ConfigureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ConfigureActionPerformed
        controllerConfig = new Hashtable<String, Integer>();
        controllerConfig.put("roiX", (int) spn_ROIX.getValue());
        controllerConfig.put("roiY", (int) spn_ROIY.getValue());
        controllerConfig.put("width", (int) spn_Width.getValue());
        controllerConfig.put("height", (int) spn_Height.getValue());
        controllerConfig.put("lower", (int) spn_MaskLow.getValue());
        controllerConfig.put("upper", (int) spn_MaskUpper.getValue());
        controllerConfig.put("horThresh", (int) spn_HorThresh.getValue());
        controllerConfig.put("verThresh", (int) spn_VerThresh.getValue());
        controllerConfig.put("partialThresh", (int) spn_ParThresh.getValue());
        controllerConfig.put("maxFeatures", (int) spn_Features.getValue());
        controllerConfig.put("keepPercent", (int) spn_Keep.getValue());
        JOptionPane.showMessageDialog(this, "Settings successfully configured, returning to the welcome page",
                "Settings configured", JOptionPane.INFORMATION_MESSAGE);
        close();
        WelcomeForm wf = new WelcomeForm(controllerConfig);
        wf.setVisible(true);

    }//GEN-LAST:event_btn_ConfigureActionPerformed

    private void btn_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btn_ExitActionPerformed

    private void btn_ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ResetActionPerformed
        // set default settings values
        spn_ROIX.setValue(35);
        spn_ROIY.setValue(110);
        spn_Width.setValue(250);
        spn_Height.setValue(350);
        spn_MaskLow.setValue(115);
        spn_MaskUpper.setValue(180);
        spn_HorThresh.setValue(35);
        spn_VerThresh.setValue(21);
        spn_ParThresh.setValue(715);
        spn_Features.setValue(500);
        spn_Keep.setValue(20);
        // set controllerConfig to null
        controllerConfig = null;
    }//GEN-LAST:event_btn_ResetActionPerformed

    private void spn_ROIXFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_spn_ROIXFocusGained
        
    }//GEN-LAST:event_spn_ROIXFocusGained

    private void spn_ROIXMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_spn_ROIXMouseClicked
        
    }//GEN-LAST:event_spn_ROIXMouseClicked

    private void spn_ROIXStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spn_ROIXStateChanged
        desc = "This setting changes the X coordinate position of the Region Of Interest." + 
               " A higher number moves the origin point of the ROI rectangle to the right," +
                " while a lower number moves it further left. Changing the starting point of" +
                " the ROI changes the area of the image that is read in the image detection" +
                " algorithm and may result in inaccuracies. Default value: 35, reccommended value: 35" + 
                " minimum value: 20, maximum value: 50";
        txt_Desc.setText(desc);
    }//GEN-LAST:event_spn_ROIXStateChanged

    private void spn_ROIYStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spn_ROIYStateChanged
        desc = "This setting changes the Y coordinate position of the Region Of Interest." + 
               " A higher number moves the origin point of the ROI rectangle down," +
                " while a lower number moves it up. Changing the starting point of" +
                " the ROI changes the area of the image that is read in the image detection" +
                " algorithm and may result in inaccuracies. Default value: 110, reccommended value: 110" + 
                " minimum value: 90, maximum value: 125";
        txt_Desc.setText(desc);
    }//GEN-LAST:event_spn_ROIYStateChanged

    private void spn_WidthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spn_WidthStateChanged
        desc = "This setting changes the width of the Region Of Interest rectangle." + 
                " Changing the width of the ROI changes the area of the image that" +
                " is read in the image detection algorithm and may result in inaccuracies." +
                " Default value: 250, reccommended value: 250," + 
                " minimum value: 225, maximum value: 275";
        txt_Desc.setText(desc);
    }//GEN-LAST:event_spn_WidthStateChanged

    private void spn_HeightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spn_HeightStateChanged
        desc = "This setting changes the height of the Region Of Interest rectangle." + 
                " Changing the height of the ROI changes the area of the image that" +
                " is read in the image detection algorithm and may result in inaccuracies." +
                " Default value: 350, reccommended value: 350," + 
                " minimum value: 300, maximum value: 375";
        txt_Desc.setText(desc);
    }//GEN-LAST:event_spn_HeightStateChanged

    private void spn_MaskLowStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spn_MaskLowStateChanged
        desc = "This setting changes the lower bound of the image masking function." + 
                " The lower bound represents the minimum pixel value (gray colour value)" +
                " the masking function detects. Changing this setting affects how well" +
                " boxes are detected by the image detection algorithm. Default value: 115," + 
                " reccommended value: 115-130, minimum value: 100, maximum value: 180";
        txt_Desc.setText(desc);
    }//GEN-LAST:event_spn_MaskLowStateChanged

    private void spn_MaskUpperStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spn_MaskUpperStateChanged
        desc = "This setting changes the upper bound of the image masking function." + 
                " The upper bound represents the minimum pixel value (gray colour value)" +
                " the masking function detects. Changing this setting affects how well" +
                " boxes are detected by the image detection algorithm. Default value: 180," + 
                " reccommended value: 180, minimum value: 180, maximum value: 200";
        txt_Desc.setText(desc);
    }//GEN-LAST:event_spn_MaskUpperStateChanged

    private void spn_HorThreshStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spn_HorThreshStateChanged
        desc = "This setting changes the horizontal threshold value of the image detection." + 
                " algorithm. The horizontal threshold defines the width of the pixel density" +
                " rectangle and alters the detection area of a box. Changing this setting" +
                " has a large effect on the accuracy of the image detection. Default " + 
                " value: 35, reccommended value: 32-26, minimum value: 20, maximum value: 41";
        txt_Desc.setText(desc);
    }//GEN-LAST:event_spn_HorThreshStateChanged

    private void spn_VerThreshStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spn_VerThreshStateChanged
        desc = "This setting changes the vertical threshold value of the image detection." + 
                " algorithm. The vertical threshold defines the height of the pixel density" +
                " rectangle and alters the detection area of a box. Changing this setting" +
                " has a large effect on the accuracy of the image detection. Default " + 
                " value: 21, reccommended value: 20-22, minimum value: 18, maximum value: 24";
        txt_Desc.setText(desc);
    }//GEN-LAST:event_spn_VerThreshStateChanged

    private void spn_ParThreshStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spn_ParThreshStateChanged
        desc = "This setting changes the partial scratch threshold value of the image detection." + 
                " algorithm. The partial scratch threshold defines the minimum number of unscratched " +
                " pixels needed for a box to be declared unscratched, any value lower than this. " +
                " threshold will be declared as a scratch.Default value: 715, reccommended value:" +
                " 690-720, minimum value: 600, maximum value: 990";
        txt_Desc.setText(desc);
    }//GEN-LAST:event_spn_ParThreshStateChanged

    private void spn_FeaturesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spn_FeaturesStateChanged
        desc = "This setting changes the number of features to be detected in the image." + 
                " alignment algorithm. The more features there are, the more accurate the " +
                " alignment is, but also the longer the algorithm takes to execute. " +
                " Default value: 500, reccommended value:" +
                " 500, minimum value: 450, maximum value: 550";
        txt_Desc.setText(desc);
    }//GEN-LAST:event_spn_FeaturesStateChanged

    private void spn_KeepStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spn_KeepStateChanged
        desc = "This setting changes the keep percent in the image alignment algorithm." + 
                " The keep percent represents the top percentage (most accurate) matching" +
                " features between the card and the template. A lower keep percent generally" +
                " raises the accuracy of the alignment at the cost of minimizing the number " +
                " of matching features. Default value: 20, reccommended value: 20" +
                " ,minimum value: 5, maximum value: 80";
        txt_Desc.setText(desc);
    }//GEN-LAST:event_spn_KeepStateChanged
    public void close() {
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SettingsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SettingsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SettingsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SettingsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SettingsForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Configure;
    private javax.swing.JButton btn_Exit;
    private javax.swing.JButton btn_Reset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_Description;
    private javax.swing.JLabel lbl_Title;
    private javax.swing.JPanel pnl_Settings;
    private javax.swing.JScrollPane scr_Settings;
    private javax.swing.JSpinner spn_Features;
    private javax.swing.JSpinner spn_Height;
    private javax.swing.JSpinner spn_HorThresh;
    private javax.swing.JSpinner spn_Keep;
    private javax.swing.JSpinner spn_MaskLow;
    private javax.swing.JSpinner spn_MaskUpper;
    private javax.swing.JSpinner spn_ParThresh;
    private javax.swing.JSpinner spn_ROIX;
    private javax.swing.JSpinner spn_ROIY;
    private javax.swing.JSpinner spn_VerThresh;
    private javax.swing.JSpinner spn_Width;
    private javax.swing.JTextArea txt_Desc;
    // End of variables declaration//GEN-END:variables
}
